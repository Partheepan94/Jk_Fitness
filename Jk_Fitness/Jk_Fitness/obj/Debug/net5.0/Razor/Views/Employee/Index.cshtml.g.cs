#pragma checksum "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "257afb1a0a8783ae8b4ede5454b0b13b9ae07315"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_Index), @"mvc.1.0.view", @"/Views/Employee/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\_ViewImports.cshtml"
using Jk_Fitness;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\_ViewImports.cshtml"
using Jk_Fitness.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"257afb1a0a8783ae8b4ede5454b0b13b9ae07315", @"/Views/Employee/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a76d35d50c8069bc61a8cb5322bee13fcae6d10", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formUser"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal form-label-left"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
  
    ViewData["Title"] = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral(@"<div class=""row"">
    <div class=""col-12"">
        <div class=""card"">
            <div class=""card-header"">
                <div class=""form-group"">
                    <h3 class=""card-title"">Display Employee Details</h3>
                </div>
            </div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-6"">
                        <div class=""form-group"">
                            <label>Branch</label>
                            <div class=""col-md-12 col-sm-12 "">
                                <select class=""form-control"" id=""BranchforSearch""></select>
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-6"">
                        <div class=""form-group"">
                            <label>Name</label>
                            <div class=""col-md-12 col-sm-12 "">
                                <input type=""text"" id=""NameforSearch"" class");
            WriteLiteral(@"=""form-control"" placeholder=""Enter Name"">
                            </div>
                        </div>
                        <div class=""form-group"">
                            <div style=""float:right"">
                                <button type=""button"" id=""btnSearch"" class=""btn btn-secondary""><i class=""fa fa-search""></i> Search</button>
                                <button type=""button"" id=""btnAdd"" class=""btn btn-success""><i class=""fa fa-plus""></i> Add New</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""card-footer table-responsive"">
                <table id=""example1"" class=""table table-bordered table-striped tblEmployee"">
                    <thead>
                        <tr>
                            <th>Employee Id</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Bran");
            WriteLiteral(@"ch</th>
                            <th>User Type</th>
                            <th>Active</th>
                            <th>Edit</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody id=""tbodyid"">
                    </tbody>

                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
    <!-- /.col -->
</div>

");
            WriteLiteral(@"<div id=""EmpModal"" class=""modal fade bs-example-modal-lg"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"" id=""myModalLabel"">Employee Details</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">
                    <span aria-hidden=""true"">Ã—</span>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""x_panel"">
                    <div class=""x_content"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "257afb1a0a8783ae8b4ede5454b0b13b9ae073157952", async() => {
                WriteLiteral(@"
                            <input type=""hidden"" value=""0"" id=""EmployeeId"" />
                            <div class=""form-group row "">
                                <label class=""control-label col-md-3 col-sm-3 "">Salutation</label>
                                <div class=""col-md-9 col-sm-9"">
                                    <select class=""form-control"" id=""Salutation""></select>
                                </div>
                            </div>
                            <div class=""form-group row "">
                                <label class=""control-label col-md-3 col-sm-3"">First Name</label>
                                <div class=""col-md-9 col-sm-9"">
                                    <input type=""text"" required id=""Fname"" class=""form-control"">
                                </div>
                            </div>
                            <div class=""form-group row "">
                                <label class=""control-label col-md-3 col-sm-3 "">Last Name</labe");
                WriteLiteral(@"l>
                                <div class=""col-md-9 col-sm-9"">
                                    <input type=""text"" id=""Lname"" class=""form-control"">
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""control-label col-md-3 col-sm-3 "">Address</label>
                                <div class=""col-md-9 col-sm-9"">
                                    <textarea id=""Address"" class=""form-control""></textarea>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""control-label col-md-3 col-sm-3 "">Email</label>
                                <div class=""col-md-9 col-sm-9 "">
                                    <input type=""text"" id=""Email"" class=""form-control"">
                                </div>
                            </div>
                 ");
                WriteLiteral(@"           <div class=""form-group row "">
                                <label class=""control-label col-md-3 col-sm-3 "">Contact No</label>
                                <div class=""col-md-9 col-sm-9 "">
                                    <input type=""text"" id=""ContactNo"" class=""form-control"">
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""control-label col-md-3 col-sm-3 "">Branch</label>
                                <div class=""col-md-9 col-sm-9 "">
                                    <select class=""form-control"" id=""Branch""></select>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""control-label col-md-3 col-sm-3 "">User Type</label>
                                <div class=""col-md-9 col-sm-9 "">
                                    <sel");
                WriteLiteral(@"ect class=""form-control"" id=""UserType""></select>
                                </div>
                            </div>
                            <div class=""bootstrap-timepicker"">
                                <div class=""form-group row"">
                                    <label class=""control-label col-md-3 col-sm-3"">Morning Start Time</label>

                                    <div class=""input-group date col-md-3 col-sm-3"" id=""timepicker"" data-target-input=""nearest"">
                                        <input type=""text"" id=""MorningIn"" class=""form-control datetimepicker-input"" data-target=""#timepicker"" />
                                        <div class=""input-group-append"" data-target=""#timepicker"" data-toggle=""datetimepicker"">
                                            <div class=""input-group-text""><i class=""far fa-clock""></i></div>
                                        </div>
                                    </div>

                                    <label class=""");
                WriteLiteral(@"control-label col-md-3 col-sm-3"" style=""text-align:center"">Morning End Time</label>

                                    <div class=""input-group date col-md-3 col-sm-3"" id=""timepicker1"" data-target-input=""nearest"">
                                        <input type=""text"" id=""MorningOut"" class=""form-control datetimepicker-input"" data-target=""#timepicker1"" />
                                        <div class=""input-group-append"" data-target=""#timepicker1"" data-toggle=""datetimepicker"">
                                            <div class=""input-group-text""><i class=""far fa-clock""></i></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""bootstrap-timepicker"">
                                <div class=""form-group row"">
                                    <label class=""control-label col-md-3 col-sm-3"">Evening Start Time</label>

           ");
                WriteLiteral(@"                         <div class=""input-group date col-md-3 col-sm-3"" id=""timepicker2"" data-target-input=""nearest"">
                                        <input type=""text"" id=""EveningIn"" class=""form-control datetimepicker-input"" data-target=""#timepicker2"" />
                                        <div class=""input-group-append"" data-target=""#timepicker2"" data-toggle=""datetimepicker"">
                                            <div class=""input-group-text""><i class=""far fa-clock""></i></div>
                                        </div>
                                    </div>

                                    <label class=""control-label col-md-3 col-sm-3"" style=""text-align:center"">Evening End Time</label>

                                    <div class=""input-group date col-md-3 col-sm-3"" id=""timepicker3"" data-target-input=""nearest"">
                                        <input type=""text"" id=""EveningOut"" class=""form-control datetimepicker-input"" data-target=""#timepicker3"" />
       ");
                WriteLiteral(@"                                 <div class=""input-group-append"" data-target=""#timepicker3"" data-toggle=""datetimepicker"">
                                            <div class=""input-group-text""><i class=""far fa-clock""></i></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""form-check"">
                                <input type=""checkbox"" class=""form-check-input"" id=""Status"" value=""true"">
                                <label class=""control-label"" for=""Status"">Active</label>
                            </div>

                            <div class=""ln_solid""></div>
                            <div class=""form-group"">
                                <div style=""float:right"">
                                    <button type=""button"" id=""btnAddEmployee"" class=""btn btn-success"">Save</button>
                                    <button ty");
                WriteLiteral("pe=\"button\" id=\"btnCancel\" class=\"btn btn-warning\">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type=""text/javascript"">
    $(document).ready(function () {
        ListEmployeeDetails();
        LoadBranchesforSearch();

    });

");
            WriteLiteral(@"    $(function () {
        //Date picker
        $('#timepicker').datetimepicker({
            format: 'LT'
        })
        $('#timepicker1').datetimepicker({
            format: 'LT'
        })
        $('#timepicker2').datetimepicker({
            format: 'LT'
        })
        $('#timepicker3').datetimepicker({
            format: 'LT'
        })
    });

    $('#btnAdd').click(function () {
        $('#EmpModal').modal('show');
        LoadBranches();
        LoadUserTypes();
        LoadSalutation();
    });

    function ListEmployeeDetails() {
        $.ajax({
            type: 'GET',
            url: '");
#nullable restore
#line 228 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
             Write(Url.Action("GetEmployeeDetails", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var myData = jQuery.parseJSON(JSON.stringify(response));
                if (myData.code == ""1"") {
                    var EmpList = myData.data;
                    var tr = [];
                    for (var i = 0; i < EmpList.length; i++) {
                        tr.push('<tr>');
                        tr.push(""<td>"" + EmpList[i].employeeId + ""</td>"");
                        tr.push(""<td>"" + EmpList[i].firstName + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].lastName + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].branch + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].userType + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].active + ""</td>"");;
                        tr.push(""<td><button onclick=\""EditEmployee('"" + EmpList[i].employeeId + ""')\"" class=\""btn btn-primary\""><i");
            WriteLiteral(@" class=\""fa fa-edit\""></i> Edit </button></td>"");
                        tr.push(""<td><button onclick=\""DeleteEmployee('"" + EmpList[i].employeeId + ""')\"" class=\""btn btn-danger\""><i class=\""fa fa-trash\""></i> Delete </button></td>"")
                        tr.push('</tr>');
                    }

                    $(""#tbodyid"").empty();
                    $('.tblEmployee').append($(tr.join('')));
                } else if (myData.code == ""0"") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'No data Found!',
                    });

                    var tr = [];
                    $(""#tbodyid"").empty();
                    $('.tblEmployee').append($(tr.join('')));
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
       ");
            WriteLiteral(@"         }
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    function LoadBranches() {
        $('#Branch').find('option').remove().end();
        Branch = $('#Branch');

        $.ajax({
            type: 'GET',
            url: '");
#nullable restore
#line 280 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
             Write(Url.Action("GetBranchDetails", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: 'json',
            headers: {
                ""Authorization"": ""Bearer "" + sessionStorage.getItem('token'),
            },
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var myData = jQuery.parseJSON(JSON.stringify(response));
                if (myData.code == ""1"") {
                    var Result = myData.data;
                    Branch.append($(""<option/>"").val(0).text(""-Select Branch-""));
                    $.each(Result, function () {
                        Branch.append($(""<option/>"").val(this.branchName).text(this.branchName));
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                }
            },
            error: function (jqXHR, exception) {
            }
        });
    }
");
            WriteLiteral("\n    function LoadUserTypes() {\r\n        $(\'#UserType\').find(\'option\').remove().end();\r\n        UserType = $(\'#UserType\');\r\n\r\n        $.ajax({\r\n            type: \'GET\',\r\n            url: \'");
#nullable restore
#line 313 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
             Write(Url.Action("GetUserTypeDetails", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: 'json',
            headers: {
                ""Authorization"": ""Bearer "" + sessionStorage.getItem('token'),
            },
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var myData = jQuery.parseJSON(JSON.stringify(response));
                if (myData.code == ""1"") {
                    var Result = myData.data;
                    UserType.append($(""<option/>"").val(0).text(""-Select UserType-""));
                    $.each(Result, function () {
                        UserType.append($(""<option/>"").val(this.role).text(this.role));
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                }
            },
            error: function (jqXHR, exception) {
            }
        });
    }

    f");
            WriteLiteral(@"unction LoadSalutation() {
        $('#Salutation').find('option').remove().end();
        Salutation = $('#Salutation');
        var SalutationList = [
            { Id: 1, Name: ""Mr"" },
            { Id: 2, Name: ""Mrs"" },
            { Id: 3, Name: ""Ms"" },
            { Id: 4, Name: ""Miss"" },
            { Id: 5, Name: ""Dr"" },
            { Id: 5, Name: ""Professor"" }
        ];
        Salutation.append($(""<option/>"").val(0).text(""-Select Salutation-""))
        $.each(SalutationList, function () {
            Salutation.append($(""<option/>"").val(this.Name).text(this.Name));
        });
    }

    $('#btnAddEmployee').click(function () {

        var EmployeeId = $('#EmployeeId').val();
        var Salutation = $('#Salutation').val();
        var Fname = $('#Fname').val();
        var Lname = $('#Lname').val();
        var Address = $('#Address').val();
        var Email = $('#Email').val();
        var ContactNo = $('#ContactNo').val();
        var Branch = $('#Branch').val();
   ");
            WriteLiteral(@"     var UserType = $('#UserType').val();
        var MorningIn = $('#MorningIn').val();
        var MorningOut = $('#MorningOut').val();
        var EveningIn = $('#EveningIn').val();
        var EveningOut = $('#EveningOut').val();
        var Active = $('#Status').prop('checked') ? ""true"" : ""false"";

        var data = '{""EmployeeId"": ""' + EmployeeId +
            ' "",""Salutation"": ""' + Salutation +
            ' "" ,""FirstName"":"" ' + Fname +
            ' "" ,""LastName"":"" ' + Lname +
            ' "",""Address"":"" ' + Address +
            ' "" ,""Email"":"" ' + Email +
            ' "",""PhoneNo"":"" ' + ContactNo +
            ' "",""Branch"": "" ' + Branch +
            ' "",""UserType"":"" ' + UserType +
            ' "",""Active"": ' + Active +
            ',""MorningInTime"": ""' + MorningIn +
            ' "",""MorningOutTime"": ""' + MorningOut +
            ' "",""EveningInTime"": ""' + EveningIn +
            ' "",""EveningOutTime"": ""' + EveningOut + '""}';


        if (EmployeeId == ""0"" || EmployeeId=="""") {");
            WriteLiteral("\n\r\n            $.ajax({\r\n                type: \'POST\',\r\n                url: \'");
#nullable restore
#line 394 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
                 Write(Url.Action("SaveEmployees", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                dataType: 'json',
                data: data,
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    var myData = jQuery.parseJSON(JSON.stringify(response));
                    if (myData.code == ""1"") {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Your work has been saved',
                            showConfirmButton: false,
                            timer: 1500
                        });
                        $('#EmpModal').modal('toggle');
                        ListEmployeeDetails();
                        Clear();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!',
                        });
           ");
            WriteLiteral("             Clear();\r\n                    }\r\n                },\r\n                error: function (jqXHR, exception) {\r\n                }\r\n            });\r\n\r\n        }\r\n        else {\r\n\r\n            $.ajax({\r\n            type: \'POST\',\r\n            url: \'");
#nullable restore
#line 429 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
             Write(Url.Action("UpdateEmployees", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: 'json',
            data: data,
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var myData = jQuery.parseJSON(JSON.stringify(response));
                if (myData.code == ""1"") {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Your work has been Updated',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    $('#EmpModal').modal('toggle');
                    ListEmployeeDetails();
                    Clear();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                    Clear();
                }
            },
            error: function (jqX");
            WriteLiteral(@"HR, exception) {
            }
            });

        }


    });

    function EditEmployee(Id) {
        $('#EmpModal').modal('show');
        LoadBranches();
        LoadUserTypes();
        LoadSalutation();

        $.ajax({
            type: 'POST',
            url: '");
#nullable restore
#line 472 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
             Write(Url.Action("GetEmployeeById", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: 'json',
            data: '{""EmployeeId"": ""' + Id + '""}',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var myData = jQuery.parseJSON(JSON.stringify(response));
                if (myData.code == ""1"") {
                    var Result = myData.data;
                    $(""#Salutation"").val(Result['salutation']);
                    $(""#Fname"").val(Result['firstName']);
                    $(""#Lname"").val(Result['lastName']);
                    $(""#Address"").val(Result['address']);
                    $(""#Email"").val(Result['email']);
                    $(""#ContactNo"").val(Result['phoneNo']);
                    $(""#Branch"").val(Result['branch']);
                    $(""#UserType"").val(Result['userType']);
                    $(""#MorningIn"").val(Result['morningInTime']);
                    $(""#MorningOut"").val(Result['morningOutTime']);
                    $(""#EveningIn"").val(Result['eveningInT");
            WriteLiteral(@"ime']);
                    $(""#EveningOut"").val(Result['eveningOutTime']);
                    $(""#Status"").prop(""checked"", Result.active)
                    $(""#EmployeeId"").val(Result['employeeId']);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                }

            },
            error: function (jqXHR, exception) {

            }
        });

    }

    function DeleteEmployee(Id) {

        Swal.fire({
            title: 'Are you sure?',
            text: ""You won't be able to revert this!"",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {

            $.ajax({
                type: 'PO");
            WriteLiteral("ST\',\r\n                url: \'");
#nullable restore
#line 525 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
                 Write(Url.Action("DeleteEmployees", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                dataType: 'json',
                data: '{""EmployeeId"": ""' + Id + '""}',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    var myData = jQuery.parseJSON(JSON.stringify(response));
                    if (myData.code == ""1"") {
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Your record has been deleted.',
                            icon: 'success',
                        });
                        ListEmployeeDetails();
                    } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                    }

                 },
                error: function (jqXHR, exception) {

                }
            });

            }
        })
    }

    function ");
            WriteLiteral("LoadBranchesforSearch() {\r\n        $(\'#BranchforSearch\').find(\'option\').remove().end();\r\n        BranchforSearch = $(\'#BranchforSearch\');\r\n\r\n        $.ajax({\r\n            type: \'GET\',\r\n            url: \'");
#nullable restore
#line 562 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
             Write(Url.Action("GetBranchDetails", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: 'json',
            headers: {
                ""Authorization"": ""Bearer "" + sessionStorage.getItem('token'),
            },
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var myData = jQuery.parseJSON(JSON.stringify(response));
                if (myData.code == ""1"") {
                    var Result = myData.data;
                    BranchforSearch.append($(""<option/>"").val(0).text(""-Select Branch-""));
                    $.each(Result, function () {
                        BranchforSearch.append($(""<option/>"").val(this.branchName).text(this.branchName));
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                }
            },
            error: function (jqXHR, exception) {
            }
   ");
            WriteLiteral("     });\r\n    }\r\n\r\n    $(\'#btnSearch\').click(function () {\r\n        var Branch = $(\'#BranchforSearch\').val();\r\n        var FName = $(\'#NameforSearch\').val();\r\n\r\n        $.ajax({\r\n            type: \'POST\',\r\n            url: \'");
#nullable restore
#line 595 "D:\My Projects\Project\Jk_Fitness\Jk_Fitness\Views\Employee\Index.cshtml"
             Write(Url.Action("SearchEmployees", "Employee"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: 'json',
            data: '{""FirstName"": ""' + FName + '"",""Branch"": ""' + Branch + '""}',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var myData = jQuery.parseJSON(JSON.stringify(response));
                if (myData.code == ""1"") {
                    var EmpList = myData.data;
                    var tr = [];
                    for (var i = 0; i < EmpList.length; i++) {
                        tr.push('<tr>');
                        tr.push(""<td>"" + EmpList[i].employeeId + ""</td>"");
                        tr.push(""<td>"" + EmpList[i].firstName + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].lastName + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].branch + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].userType + ""</td>"");;
                        tr.push(""<td>"" + EmpList[i].active + ""</td>"");;
                        tr.push(""<td><button onclic");
            WriteLiteral(@"k=\""EditEmployee('"" + EmpList[i].employeeId + ""')\"" class=\""btn btn-primary\""><i class=\""fa fa-edit\""></i> Edit </button></td>"");
                        tr.push(""<td><button onclick=\""DeleteEmployee('"" + EmpList[i].employeeId + ""')\"" class=\""btn btn-danger\""><i class=\""fa fa-trash\""></i> Delete </button></td>"")
                        tr.push('</tr>');
                    }

                    $(""#tbodyid"").empty();
                    $('.tblEmployee').append($(tr.join('')));
                } else if (myData.code == ""0"") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'No data Found!',
                    });

                    var tr = [];
                    $(""#tbodyid"").empty();
                    $('.tblEmployee').append($(tr.join('')));
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
        ");
            WriteLiteral(@"                text: 'Something went wrong!',
                    });
                }

            },
            error: function (jqXHR, exception) {

            }
        });
    });

    function Clear() {
        $('#EmployeeId').val('');
        $('#Salutation').val('');
        $('#Fname').val('');
        $('#Lname').val('');
        $('#Address').val('');
        $('#Email').val('');
        $('#ContactNo').val('');
        $('#Branch').val('');
        $('#UserType').val('');
        $('#MorningIn').val('');
        $('#MorningOut').val('');
        $('#EveningIn').val('');
        $('#EveningOut').val('');
        $('#Status').prop('checked', true);
    }

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
